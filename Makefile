# Makefile.in generated by automake 1.11.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/cpuminer
pkgincludedir = $(includedir)/cpuminer
pkglibdir = $(libdir)/cpuminer
pkglibexecdir = $(libexecdir)/cpuminer
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-mingw32
host_triplet = i686-pc-mingw32
target_triplet = i686-pc-mingw32
bin_PROGRAMS = minerd$(EXEEXT)
subdir = .
DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/cpuminer-config.h.in \
	$(top_srcdir)/configure AUTHORS COPYING ChangeLog INSTALL NEWS \
	compile config.guess config.sub depcomp install-sh missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libcurl.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = cpuminer-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_minerd_OBJECTS = minerd-cpu-miner.$(OBJEXT) minerd-util.$(OBJEXT) \
	minerd-sha2.$(OBJEXT) minerd-sha2-arm.$(OBJEXT) \
	minerd-sha2-x86.$(OBJEXT) minerd-sha2-x64.$(OBJEXT) \
	minerd-scrypt.$(OBJEXT) minerd-scrypt-arm.$(OBJEXT) \
	minerd-scrypt-x86.$(OBJEXT) minerd-scrypt-x64.$(OBJEXT) \
	minerd-aes_helper.$(OBJEXT) minerd-cubehash.$(OBJEXT) \
	minerd-luffa.$(OBJEXT) minerd-shavite.$(OBJEXT) \
	minerd-simd.$(OBJEXT) minerd-echo.$(OBJEXT) \
	minerd-qubit.$(OBJEXT)
minerd_OBJECTS = $(am_minerd_OBJECTS)
minerd_DEPENDENCIES =
minerd_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(minerd_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(minerd_SOURCES)
DIST_SOURCES = $(minerd_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir dist dist-all distcheck
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d "$(distdir)" \
    || { find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr "$(distdir)"; }; }
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /c/deps/mirrorcpu/missing --run aclocal-1.11
ALLOCA = 
AMTAR = ${SHELL} /c/deps/mirrorcpu/missing --run tar
AUTOCONF = ${SHELL} /c/deps/mirrorcpu/missing --run autoconf
AUTOHEADER = ${SHELL} /c/deps/mirrorcpu/missing --run autoheader
AUTOMAKE = ${SHELL} /c/deps/mirrorcpu/missing --run automake-1.11
AWK = gawk
CC = gcc -std=gnu99
CCAS = gcc -std=gnu99
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -std=gnu99 -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = .exe
GREP = /bin/grep
INSTALL = /bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JANSSON_LIBS = compat/jansson/libjansson.a
LDFLAGS = 
LIBCURL = -L/usr/local/lib -lcurl -lwldap32 -lws2_32
LIBCURL_CPPFLAGS = -DCURL_STATICLIB -I/usr/local/include
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /c/deps/mirrorcpu/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = cpuminer
PACKAGE_BUGREPORT = 
PACKAGE_NAME = cpuminer
PACKAGE_STRING = cpuminer 2.3.2
PACKAGE_TARNAME = cpuminer
PACKAGE_URL = 
PACKAGE_VERSION = 2.3.2
PATH_SEPARATOR = :
PTHREAD_FLAGS = 
PTHREAD_LIBS = 
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 2.3.2
WS2_LIBS = -lws2_32
_libcurl_config = 
abs_builddir = /c/deps/mirrorcpu
abs_srcdir = /c/deps/mirrorcpu
abs_top_builddir = /c/deps/mirrorcpu
abs_top_srcdir = /c/deps/mirrorcpu
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-mingw32
build_alias = 
build_cpu = i686
build_os = mingw32
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-mingw32
host_alias = 
host_cpu = i686
host_os = mingw32
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /c/deps/mirrorcpu/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = i686-pc-mingw32
target_alias = 
target_cpu = i686
target_os = mingw32
target_vendor = pc
top_build_prefix = 
top_builddir = .
top_srcdir = .
#JANSSON_INCLUDES = 
JANSSON_INCLUDES = -I$(top_srcdir)/compat/jansson
ACLOCAL_AMFLAGS = -I m4
EXTRA_DIST = example-cfg.json nomacro.pl
SUBDIRS = compat
INCLUDES = $(PTHREAD_FLAGS) -fno-strict-aliasing $(JANSSON_INCLUDES)
minerd_SOURCES = elist.h miner.h compat.h \
		  cpu-miner.c util.c \
		  sha2.c sha2-arm.S sha2-x86.S sha2-x64.S \
		  scrypt.c scrypt-arm.S scrypt-x86.S scrypt-x64.S \
		  aes_helper.c cubehash.c luffa.c shavite.c simd.c echo.c \
		  qubit.c

minerd_LDFLAGS = $(PTHREAD_FLAGS)
minerd_LDADD = -L/usr/local/lib -lcurl -lwldap32 -lws2_32 compat/jansson/libjansson.a  -lws2_32
minerd_CPPFLAGS = -DCURL_STATICLIB -I/usr/local/include
all: cpuminer-config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .S .c .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: # $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

cpuminer-config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/cpuminer-config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status cpuminer-config.h
$(srcdir)/cpuminer-config.h.in: # $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f cpuminer-config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
minerd$(EXEEXT): $(minerd_OBJECTS) $(minerd_DEPENDENCIES) 
	@rm -f minerd$(EXEEXT)
	$(minerd_LINK) $(minerd_OBJECTS) $(minerd_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/minerd-aes_helper.Po
include ./$(DEPDIR)/minerd-cpu-miner.Po
include ./$(DEPDIR)/minerd-cubehash.Po
include ./$(DEPDIR)/minerd-echo.Po
include ./$(DEPDIR)/minerd-luffa.Po
include ./$(DEPDIR)/minerd-qubit.Po
include ./$(DEPDIR)/minerd-scrypt-arm.Po
include ./$(DEPDIR)/minerd-scrypt-x64.Po
include ./$(DEPDIR)/minerd-scrypt-x86.Po
include ./$(DEPDIR)/minerd-scrypt.Po
include ./$(DEPDIR)/minerd-sha2-arm.Po
include ./$(DEPDIR)/minerd-sha2-x64.Po
include ./$(DEPDIR)/minerd-sha2-x86.Po
include ./$(DEPDIR)/minerd-sha2.Po
include ./$(DEPDIR)/minerd-shavite.Po
include ./$(DEPDIR)/minerd-simd.Po
include ./$(DEPDIR)/minerd-util.Po

.S.o:
	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CPPASCOMPILE) -c -o $@ $<

.S.obj:
	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CPPASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

minerd-sha2-arm.o: sha2-arm.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-sha2-arm.o -MD -MP -MF $(DEPDIR)/minerd-sha2-arm.Tpo -c -o minerd-sha2-arm.o `test -f 'sha2-arm.S' || echo '$(srcdir)/'`sha2-arm.S
	$(am__mv) $(DEPDIR)/minerd-sha2-arm.Tpo $(DEPDIR)/minerd-sha2-arm.Po
#	source='sha2-arm.S' object='minerd-sha2-arm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-sha2-arm.o `test -f 'sha2-arm.S' || echo '$(srcdir)/'`sha2-arm.S

minerd-sha2-arm.obj: sha2-arm.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-sha2-arm.obj -MD -MP -MF $(DEPDIR)/minerd-sha2-arm.Tpo -c -o minerd-sha2-arm.obj `if test -f 'sha2-arm.S'; then $(CYGPATH_W) 'sha2-arm.S'; else $(CYGPATH_W) '$(srcdir)/sha2-arm.S'; fi`
	$(am__mv) $(DEPDIR)/minerd-sha2-arm.Tpo $(DEPDIR)/minerd-sha2-arm.Po
#	source='sha2-arm.S' object='minerd-sha2-arm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-sha2-arm.obj `if test -f 'sha2-arm.S'; then $(CYGPATH_W) 'sha2-arm.S'; else $(CYGPATH_W) '$(srcdir)/sha2-arm.S'; fi`

minerd-sha2-x86.o: sha2-x86.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-sha2-x86.o -MD -MP -MF $(DEPDIR)/minerd-sha2-x86.Tpo -c -o minerd-sha2-x86.o `test -f 'sha2-x86.S' || echo '$(srcdir)/'`sha2-x86.S
	$(am__mv) $(DEPDIR)/minerd-sha2-x86.Tpo $(DEPDIR)/minerd-sha2-x86.Po
#	source='sha2-x86.S' object='minerd-sha2-x86.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-sha2-x86.o `test -f 'sha2-x86.S' || echo '$(srcdir)/'`sha2-x86.S

minerd-sha2-x86.obj: sha2-x86.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-sha2-x86.obj -MD -MP -MF $(DEPDIR)/minerd-sha2-x86.Tpo -c -o minerd-sha2-x86.obj `if test -f 'sha2-x86.S'; then $(CYGPATH_W) 'sha2-x86.S'; else $(CYGPATH_W) '$(srcdir)/sha2-x86.S'; fi`
	$(am__mv) $(DEPDIR)/minerd-sha2-x86.Tpo $(DEPDIR)/minerd-sha2-x86.Po
#	source='sha2-x86.S' object='minerd-sha2-x86.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-sha2-x86.obj `if test -f 'sha2-x86.S'; then $(CYGPATH_W) 'sha2-x86.S'; else $(CYGPATH_W) '$(srcdir)/sha2-x86.S'; fi`

minerd-sha2-x64.o: sha2-x64.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-sha2-x64.o -MD -MP -MF $(DEPDIR)/minerd-sha2-x64.Tpo -c -o minerd-sha2-x64.o `test -f 'sha2-x64.S' || echo '$(srcdir)/'`sha2-x64.S
	$(am__mv) $(DEPDIR)/minerd-sha2-x64.Tpo $(DEPDIR)/minerd-sha2-x64.Po
#	source='sha2-x64.S' object='minerd-sha2-x64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-sha2-x64.o `test -f 'sha2-x64.S' || echo '$(srcdir)/'`sha2-x64.S

minerd-sha2-x64.obj: sha2-x64.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-sha2-x64.obj -MD -MP -MF $(DEPDIR)/minerd-sha2-x64.Tpo -c -o minerd-sha2-x64.obj `if test -f 'sha2-x64.S'; then $(CYGPATH_W) 'sha2-x64.S'; else $(CYGPATH_W) '$(srcdir)/sha2-x64.S'; fi`
	$(am__mv) $(DEPDIR)/minerd-sha2-x64.Tpo $(DEPDIR)/minerd-sha2-x64.Po
#	source='sha2-x64.S' object='minerd-sha2-x64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-sha2-x64.obj `if test -f 'sha2-x64.S'; then $(CYGPATH_W) 'sha2-x64.S'; else $(CYGPATH_W) '$(srcdir)/sha2-x64.S'; fi`

minerd-scrypt-arm.o: scrypt-arm.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-scrypt-arm.o -MD -MP -MF $(DEPDIR)/minerd-scrypt-arm.Tpo -c -o minerd-scrypt-arm.o `test -f 'scrypt-arm.S' || echo '$(srcdir)/'`scrypt-arm.S
	$(am__mv) $(DEPDIR)/minerd-scrypt-arm.Tpo $(DEPDIR)/minerd-scrypt-arm.Po
#	source='scrypt-arm.S' object='minerd-scrypt-arm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-scrypt-arm.o `test -f 'scrypt-arm.S' || echo '$(srcdir)/'`scrypt-arm.S

minerd-scrypt-arm.obj: scrypt-arm.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-scrypt-arm.obj -MD -MP -MF $(DEPDIR)/minerd-scrypt-arm.Tpo -c -o minerd-scrypt-arm.obj `if test -f 'scrypt-arm.S'; then $(CYGPATH_W) 'scrypt-arm.S'; else $(CYGPATH_W) '$(srcdir)/scrypt-arm.S'; fi`
	$(am__mv) $(DEPDIR)/minerd-scrypt-arm.Tpo $(DEPDIR)/minerd-scrypt-arm.Po
#	source='scrypt-arm.S' object='minerd-scrypt-arm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-scrypt-arm.obj `if test -f 'scrypt-arm.S'; then $(CYGPATH_W) 'scrypt-arm.S'; else $(CYGPATH_W) '$(srcdir)/scrypt-arm.S'; fi`

minerd-scrypt-x86.o: scrypt-x86.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-scrypt-x86.o -MD -MP -MF $(DEPDIR)/minerd-scrypt-x86.Tpo -c -o minerd-scrypt-x86.o `test -f 'scrypt-x86.S' || echo '$(srcdir)/'`scrypt-x86.S
	$(am__mv) $(DEPDIR)/minerd-scrypt-x86.Tpo $(DEPDIR)/minerd-scrypt-x86.Po
#	source='scrypt-x86.S' object='minerd-scrypt-x86.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-scrypt-x86.o `test -f 'scrypt-x86.S' || echo '$(srcdir)/'`scrypt-x86.S

minerd-scrypt-x86.obj: scrypt-x86.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-scrypt-x86.obj -MD -MP -MF $(DEPDIR)/minerd-scrypt-x86.Tpo -c -o minerd-scrypt-x86.obj `if test -f 'scrypt-x86.S'; then $(CYGPATH_W) 'scrypt-x86.S'; else $(CYGPATH_W) '$(srcdir)/scrypt-x86.S'; fi`
	$(am__mv) $(DEPDIR)/minerd-scrypt-x86.Tpo $(DEPDIR)/minerd-scrypt-x86.Po
#	source='scrypt-x86.S' object='minerd-scrypt-x86.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-scrypt-x86.obj `if test -f 'scrypt-x86.S'; then $(CYGPATH_W) 'scrypt-x86.S'; else $(CYGPATH_W) '$(srcdir)/scrypt-x86.S'; fi`

minerd-scrypt-x64.o: scrypt-x64.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-scrypt-x64.o -MD -MP -MF $(DEPDIR)/minerd-scrypt-x64.Tpo -c -o minerd-scrypt-x64.o `test -f 'scrypt-x64.S' || echo '$(srcdir)/'`scrypt-x64.S
	$(am__mv) $(DEPDIR)/minerd-scrypt-x64.Tpo $(DEPDIR)/minerd-scrypt-x64.Po
#	source='scrypt-x64.S' object='minerd-scrypt-x64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-scrypt-x64.o `test -f 'scrypt-x64.S' || echo '$(srcdir)/'`scrypt-x64.S

minerd-scrypt-x64.obj: scrypt-x64.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-scrypt-x64.obj -MD -MP -MF $(DEPDIR)/minerd-scrypt-x64.Tpo -c -o minerd-scrypt-x64.obj `if test -f 'scrypt-x64.S'; then $(CYGPATH_W) 'scrypt-x64.S'; else $(CYGPATH_W) '$(srcdir)/scrypt-x64.S'; fi`
	$(am__mv) $(DEPDIR)/minerd-scrypt-x64.Tpo $(DEPDIR)/minerd-scrypt-x64.Po
#	source='scrypt-x64.S' object='minerd-scrypt-x64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-scrypt-x64.obj `if test -f 'scrypt-x64.S'; then $(CYGPATH_W) 'scrypt-x64.S'; else $(CYGPATH_W) '$(srcdir)/scrypt-x64.S'; fi`

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

minerd-cpu-miner.o: cpu-miner.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-cpu-miner.o -MD -MP -MF $(DEPDIR)/minerd-cpu-miner.Tpo -c -o minerd-cpu-miner.o `test -f 'cpu-miner.c' || echo '$(srcdir)/'`cpu-miner.c
	$(am__mv) $(DEPDIR)/minerd-cpu-miner.Tpo $(DEPDIR)/minerd-cpu-miner.Po
#	source='cpu-miner.c' object='minerd-cpu-miner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-cpu-miner.o `test -f 'cpu-miner.c' || echo '$(srcdir)/'`cpu-miner.c

minerd-cpu-miner.obj: cpu-miner.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-cpu-miner.obj -MD -MP -MF $(DEPDIR)/minerd-cpu-miner.Tpo -c -o minerd-cpu-miner.obj `if test -f 'cpu-miner.c'; then $(CYGPATH_W) 'cpu-miner.c'; else $(CYGPATH_W) '$(srcdir)/cpu-miner.c'; fi`
	$(am__mv) $(DEPDIR)/minerd-cpu-miner.Tpo $(DEPDIR)/minerd-cpu-miner.Po
#	source='cpu-miner.c' object='minerd-cpu-miner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-cpu-miner.obj `if test -f 'cpu-miner.c'; then $(CYGPATH_W) 'cpu-miner.c'; else $(CYGPATH_W) '$(srcdir)/cpu-miner.c'; fi`

minerd-util.o: util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-util.o -MD -MP -MF $(DEPDIR)/minerd-util.Tpo -c -o minerd-util.o `test -f 'util.c' || echo '$(srcdir)/'`util.c
	$(am__mv) $(DEPDIR)/minerd-util.Tpo $(DEPDIR)/minerd-util.Po
#	source='util.c' object='minerd-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-util.o `test -f 'util.c' || echo '$(srcdir)/'`util.c

minerd-util.obj: util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-util.obj -MD -MP -MF $(DEPDIR)/minerd-util.Tpo -c -o minerd-util.obj `if test -f 'util.c'; then $(CYGPATH_W) 'util.c'; else $(CYGPATH_W) '$(srcdir)/util.c'; fi`
	$(am__mv) $(DEPDIR)/minerd-util.Tpo $(DEPDIR)/minerd-util.Po
#	source='util.c' object='minerd-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-util.obj `if test -f 'util.c'; then $(CYGPATH_W) 'util.c'; else $(CYGPATH_W) '$(srcdir)/util.c'; fi`

minerd-sha2.o: sha2.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-sha2.o -MD -MP -MF $(DEPDIR)/minerd-sha2.Tpo -c -o minerd-sha2.o `test -f 'sha2.c' || echo '$(srcdir)/'`sha2.c
	$(am__mv) $(DEPDIR)/minerd-sha2.Tpo $(DEPDIR)/minerd-sha2.Po
#	source='sha2.c' object='minerd-sha2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-sha2.o `test -f 'sha2.c' || echo '$(srcdir)/'`sha2.c

minerd-sha2.obj: sha2.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-sha2.obj -MD -MP -MF $(DEPDIR)/minerd-sha2.Tpo -c -o minerd-sha2.obj `if test -f 'sha2.c'; then $(CYGPATH_W) 'sha2.c'; else $(CYGPATH_W) '$(srcdir)/sha2.c'; fi`
	$(am__mv) $(DEPDIR)/minerd-sha2.Tpo $(DEPDIR)/minerd-sha2.Po
#	source='sha2.c' object='minerd-sha2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-sha2.obj `if test -f 'sha2.c'; then $(CYGPATH_W) 'sha2.c'; else $(CYGPATH_W) '$(srcdir)/sha2.c'; fi`

minerd-scrypt.o: scrypt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-scrypt.o -MD -MP -MF $(DEPDIR)/minerd-scrypt.Tpo -c -o minerd-scrypt.o `test -f 'scrypt.c' || echo '$(srcdir)/'`scrypt.c
	$(am__mv) $(DEPDIR)/minerd-scrypt.Tpo $(DEPDIR)/minerd-scrypt.Po
#	source='scrypt.c' object='minerd-scrypt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-scrypt.o `test -f 'scrypt.c' || echo '$(srcdir)/'`scrypt.c

minerd-scrypt.obj: scrypt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-scrypt.obj -MD -MP -MF $(DEPDIR)/minerd-scrypt.Tpo -c -o minerd-scrypt.obj `if test -f 'scrypt.c'; then $(CYGPATH_W) 'scrypt.c'; else $(CYGPATH_W) '$(srcdir)/scrypt.c'; fi`
	$(am__mv) $(DEPDIR)/minerd-scrypt.Tpo $(DEPDIR)/minerd-scrypt.Po
#	source='scrypt.c' object='minerd-scrypt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-scrypt.obj `if test -f 'scrypt.c'; then $(CYGPATH_W) 'scrypt.c'; else $(CYGPATH_W) '$(srcdir)/scrypt.c'; fi`

minerd-aes_helper.o: aes_helper.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-aes_helper.o -MD -MP -MF $(DEPDIR)/minerd-aes_helper.Tpo -c -o minerd-aes_helper.o `test -f 'aes_helper.c' || echo '$(srcdir)/'`aes_helper.c
	$(am__mv) $(DEPDIR)/minerd-aes_helper.Tpo $(DEPDIR)/minerd-aes_helper.Po
#	source='aes_helper.c' object='minerd-aes_helper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-aes_helper.o `test -f 'aes_helper.c' || echo '$(srcdir)/'`aes_helper.c

minerd-aes_helper.obj: aes_helper.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-aes_helper.obj -MD -MP -MF $(DEPDIR)/minerd-aes_helper.Tpo -c -o minerd-aes_helper.obj `if test -f 'aes_helper.c'; then $(CYGPATH_W) 'aes_helper.c'; else $(CYGPATH_W) '$(srcdir)/aes_helper.c'; fi`
	$(am__mv) $(DEPDIR)/minerd-aes_helper.Tpo $(DEPDIR)/minerd-aes_helper.Po
#	source='aes_helper.c' object='minerd-aes_helper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-aes_helper.obj `if test -f 'aes_helper.c'; then $(CYGPATH_W) 'aes_helper.c'; else $(CYGPATH_W) '$(srcdir)/aes_helper.c'; fi`

minerd-cubehash.o: cubehash.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-cubehash.o -MD -MP -MF $(DEPDIR)/minerd-cubehash.Tpo -c -o minerd-cubehash.o `test -f 'cubehash.c' || echo '$(srcdir)/'`cubehash.c
	$(am__mv) $(DEPDIR)/minerd-cubehash.Tpo $(DEPDIR)/minerd-cubehash.Po
#	source='cubehash.c' object='minerd-cubehash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-cubehash.o `test -f 'cubehash.c' || echo '$(srcdir)/'`cubehash.c

minerd-cubehash.obj: cubehash.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-cubehash.obj -MD -MP -MF $(DEPDIR)/minerd-cubehash.Tpo -c -o minerd-cubehash.obj `if test -f 'cubehash.c'; then $(CYGPATH_W) 'cubehash.c'; else $(CYGPATH_W) '$(srcdir)/cubehash.c'; fi`
	$(am__mv) $(DEPDIR)/minerd-cubehash.Tpo $(DEPDIR)/minerd-cubehash.Po
#	source='cubehash.c' object='minerd-cubehash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-cubehash.obj `if test -f 'cubehash.c'; then $(CYGPATH_W) 'cubehash.c'; else $(CYGPATH_W) '$(srcdir)/cubehash.c'; fi`

minerd-luffa.o: luffa.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-luffa.o -MD -MP -MF $(DEPDIR)/minerd-luffa.Tpo -c -o minerd-luffa.o `test -f 'luffa.c' || echo '$(srcdir)/'`luffa.c
	$(am__mv) $(DEPDIR)/minerd-luffa.Tpo $(DEPDIR)/minerd-luffa.Po
#	source='luffa.c' object='minerd-luffa.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-luffa.o `test -f 'luffa.c' || echo '$(srcdir)/'`luffa.c

minerd-luffa.obj: luffa.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-luffa.obj -MD -MP -MF $(DEPDIR)/minerd-luffa.Tpo -c -o minerd-luffa.obj `if test -f 'luffa.c'; then $(CYGPATH_W) 'luffa.c'; else $(CYGPATH_W) '$(srcdir)/luffa.c'; fi`
	$(am__mv) $(DEPDIR)/minerd-luffa.Tpo $(DEPDIR)/minerd-luffa.Po
#	source='luffa.c' object='minerd-luffa.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-luffa.obj `if test -f 'luffa.c'; then $(CYGPATH_W) 'luffa.c'; else $(CYGPATH_W) '$(srcdir)/luffa.c'; fi`

minerd-shavite.o: shavite.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-shavite.o -MD -MP -MF $(DEPDIR)/minerd-shavite.Tpo -c -o minerd-shavite.o `test -f 'shavite.c' || echo '$(srcdir)/'`shavite.c
	$(am__mv) $(DEPDIR)/minerd-shavite.Tpo $(DEPDIR)/minerd-shavite.Po
#	source='shavite.c' object='minerd-shavite.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-shavite.o `test -f 'shavite.c' || echo '$(srcdir)/'`shavite.c

minerd-shavite.obj: shavite.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-shavite.obj -MD -MP -MF $(DEPDIR)/minerd-shavite.Tpo -c -o minerd-shavite.obj `if test -f 'shavite.c'; then $(CYGPATH_W) 'shavite.c'; else $(CYGPATH_W) '$(srcdir)/shavite.c'; fi`
	$(am__mv) $(DEPDIR)/minerd-shavite.Tpo $(DEPDIR)/minerd-shavite.Po
#	source='shavite.c' object='minerd-shavite.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-shavite.obj `if test -f 'shavite.c'; then $(CYGPATH_W) 'shavite.c'; else $(CYGPATH_W) '$(srcdir)/shavite.c'; fi`

minerd-simd.o: simd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-simd.o -MD -MP -MF $(DEPDIR)/minerd-simd.Tpo -c -o minerd-simd.o `test -f 'simd.c' || echo '$(srcdir)/'`simd.c
	$(am__mv) $(DEPDIR)/minerd-simd.Tpo $(DEPDIR)/minerd-simd.Po
#	source='simd.c' object='minerd-simd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-simd.o `test -f 'simd.c' || echo '$(srcdir)/'`simd.c

minerd-simd.obj: simd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-simd.obj -MD -MP -MF $(DEPDIR)/minerd-simd.Tpo -c -o minerd-simd.obj `if test -f 'simd.c'; then $(CYGPATH_W) 'simd.c'; else $(CYGPATH_W) '$(srcdir)/simd.c'; fi`
	$(am__mv) $(DEPDIR)/minerd-simd.Tpo $(DEPDIR)/minerd-simd.Po
#	source='simd.c' object='minerd-simd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-simd.obj `if test -f 'simd.c'; then $(CYGPATH_W) 'simd.c'; else $(CYGPATH_W) '$(srcdir)/simd.c'; fi`

minerd-echo.o: echo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-echo.o -MD -MP -MF $(DEPDIR)/minerd-echo.Tpo -c -o minerd-echo.o `test -f 'echo.c' || echo '$(srcdir)/'`echo.c
	$(am__mv) $(DEPDIR)/minerd-echo.Tpo $(DEPDIR)/minerd-echo.Po
#	source='echo.c' object='minerd-echo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-echo.o `test -f 'echo.c' || echo '$(srcdir)/'`echo.c

minerd-echo.obj: echo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-echo.obj -MD -MP -MF $(DEPDIR)/minerd-echo.Tpo -c -o minerd-echo.obj `if test -f 'echo.c'; then $(CYGPATH_W) 'echo.c'; else $(CYGPATH_W) '$(srcdir)/echo.c'; fi`
	$(am__mv) $(DEPDIR)/minerd-echo.Tpo $(DEPDIR)/minerd-echo.Po
#	source='echo.c' object='minerd-echo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-echo.obj `if test -f 'echo.c'; then $(CYGPATH_W) 'echo.c'; else $(CYGPATH_W) '$(srcdir)/echo.c'; fi`

minerd-qubit.o: qubit.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-qubit.o -MD -MP -MF $(DEPDIR)/minerd-qubit.Tpo -c -o minerd-qubit.o `test -f 'qubit.c' || echo '$(srcdir)/'`qubit.c
	$(am__mv) $(DEPDIR)/minerd-qubit.Tpo $(DEPDIR)/minerd-qubit.Po
#	source='qubit.c' object='minerd-qubit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-qubit.o `test -f 'qubit.c' || echo '$(srcdir)/'`qubit.c

minerd-qubit.obj: qubit.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-qubit.obj -MD -MP -MF $(DEPDIR)/minerd-qubit.Tpo -c -o minerd-qubit.obj `if test -f 'qubit.c'; then $(CYGPATH_W) 'qubit.c'; else $(CYGPATH_W) '$(srcdir)/qubit.c'; fi`
	$(am__mv) $(DEPDIR)/minerd-qubit.Tpo $(DEPDIR)/minerd-qubit.Po
#	source='qubit.c' object='minerd-qubit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-qubit.obj `if test -f 'qubit.c'; then $(CYGPATH_W) 'qubit.c'; else $(CYGPATH_W) '$(srcdir)/qubit.c'; fi`

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) cpuminer-config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) cpuminer-config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) cpuminer-config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) cpuminer-config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@$(am__cd) '$(distuninstallcheck_dir)' \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) cpuminer-config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all \
	ctags-recursive install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am am--refresh check check-am clean clean-binPROGRAMS \
	clean-generic ctags ctags-recursive dist dist-all dist-bzip2 \
	dist-gzip dist-lzma dist-shar dist-tarZ dist-xz dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-hdr distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
